spring:
  application:
    name: menu-service
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:menudb
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true
    show-sql: true
    properties:
      hibernate:
        format_sql: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: "http://server1:8761/eureka/,http://server2:8762/eureka/,http://server3:8763/eureka/"

management:
  endpoints:
    web:
      exposure:
        include: prometheus,health,info
  endpoint:
    health:
      show-details: always
      show-components: always
      enabled: true
  health:
    circuitbreakers:
      enabled: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
    instances:
      iaServiceCircuitBreaker:
        slidingWindowSize: 10
        permittedNUmberOfCallsInHalfOpenState: 5
        slidingWindowType: COUNT_BASED
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        registerHealthIndicator: true
      paymentServiceCircuitBreaker:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 100
        permittedNumberOfCallsInHalfOpenState: 10
        minimumNumberOfCalls: 100
        waitDurationInOpenState: 60s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        registerHealthIndicator: true
  retry:
    instances:
      iaServiceRetry:
        maxAttempts: 2
        waitDuration: 500ms
        intervalFunction:
          type: exponential
          exponential-backoff-multiplier: 2
          max-interval: 5s
        retry-exceptions:
          - java.util.concurrent.TimeoutException
          - java.net.ConnectException
        registerHealthIndicator: true
      paymentServiceRetry:
        maxAttempts: 3
        waitDuration: 500ms
        intervalFunction:
          type: exponential
          exponential-backoff-multiplier: 2
          max-interval: 5s
        retryExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
        registerHealthIndicator: true
  bulkhead:
    instances:
      iaServiceBulkhead:
        maxWaitDuration: 0ms
        maxConcurrentCalls: 10
        registerHealthIndicator: true
      paymentServiceBulkhead:
        maxWaitDuration: 0ms
        maxConcurrentCalls: 25
        registerHealthIndicator: true
  ratelimiter:
    instances:
      iaServiceRateLimiter:
        limitForPeriod: 15
        limitRefreshPeriod: 60s
        timeoutDuration: 0
        registerHealthIndicator: true
      PaymentServiceRateLimiter:
        limitForPeriod: 20
        limitRefreshPeriod: 500ms
        timeoutDuration: 5s
        registerHealthIndicator: true
